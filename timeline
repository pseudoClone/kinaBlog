# Initial
=============
- Create project
- migrate server
- test if server is running
- create superuser
- add the name of the admin from the admin panel for future use
- make a new app
- enter the app in the INSTALLED_APPS section
- import include and path to the urls.py and append to path[] the path using include from another module that you use to get the url
- in the module(the blog in this case), make a function that returns the rendered template for the page
- make the home page in the {module_name}/templates folder
- import django.contrib.auth.model to connenct to the users/user
- make models and use CASCADE to denote the deletion of one entity deletes the records of conncted entity
- also return something from the models class that is useful. Meaning something that is recognizable in the admin page. Like a name
- add the model class to the admin.py file to make it accesssible to admin site
- at this point if you go to the server and check the Posts link, it will give error. That's because the changes have not been migrated
- first makemigrations then migrate
- since self.author is an object enclose it in a string convertor
- make use of class based views in views.py for easy model view interop
- while making templates the ListView and DetailView must be imported to the views.py
- and while making the template, make sure to loop throught the object_list in the html
- since we are now using class based views, urlpatters won't work anymore
- make sure to import Post model into your views

# Bootstrap - Prettier
- thinking of using the starter template from the bootstrap website
- but before make a base.html that has the starter template.
- make a django templating block in the base.html and extend it to other html of the project
- make the tile extend from base too.
- make some navabars and shii
- make some back buttons
- also make the title dynamic i.e name of the blog on title using templates
- can't track changes because I put files in wrong directories, but check the last 5 commits for this 
- remember that the object_list for home.html is 'postx' and the for other pages is just 'post'
- use UpdateView for updating the created Views
